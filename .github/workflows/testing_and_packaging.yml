name: Unit Tests, build & deploy library
on:
  push:
    branches: [ main ]
jobs:

  # BUILD AND TEST THE LIBRARY
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9.13"]
    services:
      redis:
        #image: redis
        # use the redis-stack-server without redis-insight
        # we use our own redis version which turns off the protected-mode
        image: redis/redis-stack-server
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5     
        env:
            REDIS_ARGS: "--protected-mode no"
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}  
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip          
        pip install pytest redis
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Running all PyTests
      env:
        REDIS_OM_URL: redis://localhost:6379/0
      run: |
        pytest -s -vv

  # DEPLOY THE LIBRARY TO PYPI
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.13
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine bumpver --upgrade setuptools
    - name: Configure git
      run: |
        git config --local user.email "brayan@brayan.com"
        git config --local user.name "svabra"
    - name: Bump version
      run: bumpver update --patch
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine check dist/*
        twine upload dist/*
